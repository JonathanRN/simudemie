/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.ulaval.glo2004.afficheur.CreationCarte.panels;

import ca.ulaval.glo2004.afficheur.CreationCarte.mode.ApercuCarte;
import ca.ulaval.glo2004.afficheur.utilsUI.ZoomablePanel;
import ca.ulaval.glo2004.domaine.Carte;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import javax.swing.SwingUtilities;

/**
 *
 * @author Jonathan
 */
public class CarteApercu extends ZoomablePanel {
    
    private ApercuCarte prisePhotoMode;
    
    public CarteApercu() {
        initComponents();        
    }
    
    public void setCarte(Carte carte) {
        prisePhotoMode = null;
        if (carte != null) {
            prisePhotoMode = new ApercuCarte(carte);
            
            centrerVueSurPolygones(carte);
        }
    }
    
    private void centrerVueSurPolygones(Carte carte) {
        this.getParent().setVisible(!carte.getListePays().isEmpty());
        
        if (!carte.getListePays().isEmpty()) {
            // Get les bounds du premier pays sur la carte
            Rectangle2D rect = carte.getListePays().get(0).getPolygone().getBounds2D();

            int x = (getWidth()/2) - (int)rect.getCenterX();
            int y = (getHeight()/2) - (int)rect.getCenterY();

            setZoom(1, new Point2D.Double(getWidth()/2, getHeight()/2));
            setPos(new Point(x, y));
        }
        
        repaint();
    }

    @Override
    public void paintComponent(Graphics g) {
        super.paintComponent(g);
        
        if (prisePhotoMode != null) {
            prisePhotoMode.paint((Graphics2D)g);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(46, 52, 64));
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                formMouseWheelMoved(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 820, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 518, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        if (SwingUtilities.isRightMouseButton(evt)) {
            mousePressed(evt);
        }
    }//GEN-LAST:event_formMousePressed

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
        if (SwingUtilities.isRightMouseButton(evt)) {
            mouseReleased(evt);
        }
        this.getRootPane().repaint();
    }//GEN-LAST:event_formMouseReleased

    private void formMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_formMouseWheelMoved
        mouseWheelMoved(evt);
        this.getRootPane().repaint();
    }//GEN-LAST:event_formMouseWheelMoved

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        if (SwingUtilities.isRightMouseButton(evt)) {
            mouseDragged(evt);
        }
        this.getRootPane().repaint();
    }//GEN-LAST:event_formMouseDragged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
