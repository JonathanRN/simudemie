/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.ulaval.glo2004.afficheur.Simulation;

import ca.ulaval.glo2004.afficheur.utilsUI.FontRegister;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Jonathan
 */
public class MesurePanel extends javax.swing.JPanel {
    
    private JPanel conteneur;
    private boolean edition, mouseOverEdition, mouseOverActif, estActif;
    
    public MesurePanel() {
        initComponents();
    }
    
    public MesurePanel(JPanel conteneur) {
        this.conteneur = conteneur;
        initComponents();
        
        try {
            NomMesureTextField.setFont(FontRegister.RobotoLight.deriveFont(14f));
            ReductionLabel.setFont(FontRegister.RobotoLight.deriveFont(14f));
            AdhesionLabel.setFont(FontRegister.RobotoLight.deriveFont(14f));
        }
        catch (Exception e) {
        }
        
        // Met tout de suite en mode edition lors de la creation
        setEdition(true, false);
        setActif(true, false);
    }
    
    private void setActif(boolean actif, boolean mouseOver) {
        estActif = actif;
        
        updateActifIcon(mouseOver);
    }
    
    private void setEdition(boolean edition, boolean mouseOver) {
        this.edition = edition;
        
        NomMesureTextField.setEnabled(edition);
        Reduction.setEnabled(edition);
        Adhesion.setEnabled(edition);
        
        updateEditerIcon(mouseOver);
        
        if (!edition) {
            // Save
        }
    }
    
    private void updateEditerIcon(boolean actif) {
        mouseOverEdition = actif;
        String path = "/icons/simulation/mesure/";
        path += edition ? "save" : "editer";
        path += actif ? "_highlight.png" : ".png";
        Editer.setIcon(new ImageIcon(getClass().getResource(path)));
        conteneur.getRootPane().repaint();
    }
    
    private void updateSupprimerIcon(boolean actif) {
        String path = "/icons/simulation/mesure/";
        path += "supprimer";
        path += actif ? "_highlight.png" : ".png";
        Supprimer.setIcon(new ImageIcon(getClass().getResource(path)));
        conteneur.getRootPane().repaint();
    }
    
    private void updateActifIcon(boolean actif) {
        mouseOverActif = actif;
        String path = "/icons/simulation/mesure/";
        path += estActif ? "checked" : "unchecked";
        path += actif ? "_highlight.png" : ".png";
        Activer.setIcon(new ImageIcon(getClass().getResource(path)));
        conteneur.getRootPane().repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Header = new javax.swing.JPanel();
        NomMesureTextField = new javax.swing.JTextField();
        Boutons = new javax.swing.JPanel();
        Editer = new javax.swing.JLabel();
        Supprimer = new javax.swing.JLabel();
        Activer = new javax.swing.JLabel();
        ReductionPanel = new javax.swing.JPanel();
        ReductionLabel = new javax.swing.JLabel();
        Reduction = new javax.swing.JSpinner();
        TauxAdhesion = new javax.swing.JPanel();
        AdhesionLabel = new javax.swing.JLabel();
        Adhesion = new javax.swing.JSpinner();

        setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 15, 0));
        setMaximumSize(new java.awt.Dimension(32767, 100));
        setOpaque(false);
        setLayout(new java.awt.GridLayout(3, 0));

        Header.setOpaque(false);
        Header.setLayout(new java.awt.BorderLayout());

        NomMesureTextField.setText("Nom de la mesure");
        NomMesureTextField.setSelectionColor(new java.awt.Color(136, 192, 208));
        Header.add(NomMesureTextField, java.awt.BorderLayout.CENTER);

        Boutons.setOpaque(false);
        Boutons.setLayout(new java.awt.GridLayout(1, 3));

        Editer.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Editer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/simulation/mesure/editer.png"))); // NOI18N
        Editer.setMaximumSize(new java.awt.Dimension(30, 30));
        Editer.setMinimumSize(new java.awt.Dimension(30, 30));
        Editer.setPreferredSize(new java.awt.Dimension(30, 30));
        Editer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                EditerMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                EditerMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                EditerMouseReleased(evt);
            }
        });
        Boutons.add(Editer);

        Supprimer.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Supprimer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/simulation/mesure/supprimer.png"))); // NOI18N
        Supprimer.setMaximumSize(new java.awt.Dimension(30, 30));
        Supprimer.setMinimumSize(new java.awt.Dimension(30, 30));
        Supprimer.setPreferredSize(new java.awt.Dimension(30, 30));
        Supprimer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                SupprimerMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                SupprimerMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                SupprimerMouseReleased(evt);
            }
        });
        Boutons.add(Supprimer);

        Activer.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Activer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/simulation/mesure/unchecked.png"))); // NOI18N
        Activer.setMaximumSize(new java.awt.Dimension(30, 30));
        Activer.setMinimumSize(new java.awt.Dimension(30, 30));
        Activer.setPreferredSize(new java.awt.Dimension(30, 30));
        Activer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ActiverMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ActiverMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                ActiverMouseReleased(evt);
            }
        });
        Boutons.add(Activer);

        Header.add(Boutons, java.awt.BorderLayout.LINE_END);

        add(Header);

        ReductionPanel.setOpaque(false);
        ReductionPanel.setLayout(new java.awt.BorderLayout());

        ReductionLabel.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        ReductionLabel.setText("Taux réduction inf. : ");
        ReductionPanel.add(ReductionLabel, java.awt.BorderLayout.WEST);

        Reduction.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(0.0f), Float.valueOf(0.0f), Float.valueOf(100.0f), Float.valueOf(0.5f)));
        ReductionPanel.add(Reduction, java.awt.BorderLayout.CENTER);

        add(ReductionPanel);

        TauxAdhesion.setOpaque(false);
        TauxAdhesion.setLayout(new java.awt.BorderLayout());

        AdhesionLabel.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        AdhesionLabel.setText("Taux d'adhésion :");
        AdhesionLabel.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 17));
        TauxAdhesion.add(AdhesionLabel, java.awt.BorderLayout.WEST);

        Adhesion.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(0.0f), Float.valueOf(0.0f), Float.valueOf(100.0f), Float.valueOf(0.5f)));
        TauxAdhesion.add(Adhesion, java.awt.BorderLayout.CENTER);

        add(TauxAdhesion);
    }// </editor-fold>//GEN-END:initComponents

    private void EditerMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditerMouseEntered
        updateEditerIcon(true);
    }//GEN-LAST:event_EditerMouseEntered

    private void EditerMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditerMouseExited
        updateEditerIcon(false);
    }//GEN-LAST:event_EditerMouseExited

    private void ActiverMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ActiverMouseEntered
        updateActifIcon(true);
    }//GEN-LAST:event_ActiverMouseEntered

    private void ActiverMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ActiverMouseExited
        updateActifIcon(false);
    }//GEN-LAST:event_ActiverMouseExited

    private void SupprimerMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SupprimerMouseEntered
        updateSupprimerIcon(true);
    }//GEN-LAST:event_SupprimerMouseEntered

    private void SupprimerMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SupprimerMouseExited
        updateSupprimerIcon(false);
    }//GEN-LAST:event_SupprimerMouseExited

    private void SupprimerMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SupprimerMouseReleased
        int result = JOptionPane.showConfirmDialog(this, "Êtes-vous sûr de vouloir supprimer " + "\"" + NomMesureTextField.getText() + "\"?", "", JOptionPane.WARNING_MESSAGE);

        if(result == JOptionPane.YES_OPTION) {
            conteneur.remove(this);
            conteneur.getParent().validate();
            conteneur.getRootPane().repaint();
        }
    }//GEN-LAST:event_SupprimerMouseReleased

    private void EditerMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditerMouseReleased
        setEdition(!edition, mouseOverEdition);
    }//GEN-LAST:event_EditerMouseReleased

    private void ActiverMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ActiverMouseReleased
        setActif(!estActif, mouseOverActif);
    }//GEN-LAST:event_ActiverMouseReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Activer;
    private javax.swing.JSpinner Adhesion;
    private javax.swing.JLabel AdhesionLabel;
    private javax.swing.JPanel Boutons;
    private javax.swing.JLabel Editer;
    private javax.swing.JPanel Header;
    private javax.swing.JTextField NomMesureTextField;
    private javax.swing.JSpinner Reduction;
    private javax.swing.JLabel ReductionLabel;
    private javax.swing.JPanel ReductionPanel;
    private javax.swing.JLabel Supprimer;
    private javax.swing.JPanel TauxAdhesion;
    // End of variables declaration//GEN-END:variables
}
