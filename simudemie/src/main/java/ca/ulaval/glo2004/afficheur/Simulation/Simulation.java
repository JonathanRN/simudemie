/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.ulaval.glo2004.afficheur.Simulation;

import ca.ulaval.glo2004.afficheur.FramePrincipal;
import ca.ulaval.glo2004.domaine.Carte;
import java.awt.event.MouseEvent;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author Jonathan
 */
public class Simulation extends javax.swing.JPanel {
    
    private boolean estEnDirect;
    private boolean mouseOver;
    private final Carte carte;
    
    public Simulation(Carte carte) {
        this.carte = carte;
        initComponents();
        
        HomeButton.setIcon("/icons/icons8_home_25px_1.png");
        
        HomeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                HomeButtonReleased(evt);
            }
        });
        
        SimulationPanel.setSimulation(this);
    }
    
    public SimulationPanel getPanel() {
        return SimulationPanel;
    }
    
    public Carte getCarte() {
        return carte;
    }
    
    public void setDirect(boolean direct) {
        estEnDirect = direct;
    }
    
    public boolean getDirect() { return estEnDirect; }
    
    private void HomeButtonReleased(MouseEvent evt) {
        JOptionPane optionPane = new JOptionPane();
        optionPane.setMessage("Retourner au menu principal?");
        optionPane.setMessageType(JOptionPane.QUESTION_MESSAGE);
        optionPane.setOptionType(JOptionPane.YES_NO_CANCEL_OPTION);
        
        int result = JOptionPane.showOptionDialog(
            SwingUtilities.windowForComponent(this),
            optionPane.getMessage(),
            "Retour au menu?",
            optionPane.getOptionType(),
            optionPane.getMessageType(),
            optionPane.getIcon(),
            optionPane.getOptions(),
            optionPane.getInitialValue());
        
        if (result == JOptionPane.YES_OPTION) {
            FramePrincipal frame = (FramePrincipal)SwingUtilities.windowForComponent(this);
            frame.returnToHome();
        }
    }
    
    private void updateDirectIcon() {
        String path = "/icons/";
        path += estEnDirect ? "pause_button_35px" : "direct_button_35px" ;
        path += mouseOver ? "_highlight.png" : ".png";
        DirectIcon.setIcon(new ImageIcon(getClass().getResource(path)));
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SliderParent = new javax.swing.JPanel();
        Slider = new javax.swing.JPanel();
        SliderJour = new javax.swing.JSlider();
        BoutonDirect = new javax.swing.JPanel();
        DirectIcon = new javax.swing.JLabel();
        Buttons = new javax.swing.JPanel();
        SidePanel = new ca.ulaval.glo2004.afficheur.PanelArrondi();
        AddButton = new ca.ulaval.glo2004.afficheur.boutons.SimulationBouton();
        Spacing = new javax.swing.JPanel();
        HomeButton = new ca.ulaval.glo2004.afficheur.boutons.SimulationBouton();
        SimulationPanel = new ca.ulaval.glo2004.afficheur.Simulation.SimulationPanel();

        setBackground(new java.awt.Color(46, 52, 64));
        setLayout(new javax.swing.OverlayLayout(this));

        SliderParent.setOpaque(false);
        SliderParent.setLayout(new java.awt.BorderLayout());

        Slider.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 20, 0, 20));
        Slider.setOpaque(false);
        Slider.setLayout(new java.awt.BorderLayout());

        SliderJour.setSnapToTicks(true);
        SliderJour.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 10));
        SliderJour.setFocusable(false);
        SliderJour.setPreferredSize(new java.awt.Dimension(200, 70));
        SliderJour.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                SliderJourMouseReleased(evt);
            }
        });
        Slider.add(SliderJour, java.awt.BorderLayout.CENTER);

        BoutonDirect.setToolTipText("Retour en direct");
        BoutonDirect.setOpaque(false);
        BoutonDirect.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BoutonDirectMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BoutonDirectMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BoutonDirectMouseExited(evt);
            }
        });
        BoutonDirect.setLayout(new java.awt.BorderLayout());

        DirectIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        DirectIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/direct_button_35px.png"))); // NOI18N
        BoutonDirect.add(DirectIcon, java.awt.BorderLayout.EAST);

        Slider.add(BoutonDirect, java.awt.BorderLayout.EAST);

        SliderParent.add(Slider, java.awt.BorderLayout.SOUTH);

        add(SliderParent);

        Buttons.setBackground(new java.awt.Color(46, 52, 64));
        Buttons.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        Buttons.setOpaque(false);

        SidePanel.setMaximumSize(new java.awt.Dimension(100, 200));
        SidePanel.setMinimumSize(new java.awt.Dimension(100, 200));
        SidePanel.setPreferredSize(new java.awt.Dimension(50, 200));
        SidePanel.setLayout(new java.awt.GridLayout(6, 1, 0, 10));
        SidePanel.add(AddButton);

        Spacing.setBackground(new java.awt.Color(90, 95, 104));
        Spacing.setOpaque(false);
        Spacing.setPreferredSize(new java.awt.Dimension(50, 50));

        javax.swing.GroupLayout SpacingLayout = new javax.swing.GroupLayout(Spacing);
        Spacing.setLayout(SpacingLayout);
        SpacingLayout.setHorizontalGroup(
            SpacingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );
        SpacingLayout.setVerticalGroup(
            SpacingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 46, Short.MAX_VALUE)
        );

        SidePanel.add(Spacing);
        SidePanel.add(HomeButton);

        javax.swing.GroupLayout ButtonsLayout = new javax.swing.GroupLayout(Buttons);
        Buttons.setLayout(ButtonsLayout);
        ButtonsLayout.setHorizontalGroup(
            ButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ButtonsLayout.createSequentialGroup()
                .addComponent(SidePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1078, Short.MAX_VALUE))
        );
        ButtonsLayout.setVerticalGroup(
            ButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ButtonsLayout.createSequentialGroup()
                .addContainerGap(240, Short.MAX_VALUE)
                .addComponent(SidePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(234, Short.MAX_VALUE))
        );

        add(Buttons);

        SimulationPanel.setOpaque(false);

        javax.swing.GroupLayout SimulationPanelLayout = new javax.swing.GroupLayout(SimulationPanel);
        SimulationPanel.setLayout(SimulationPanelLayout);
        SimulationPanelLayout.setHorizontalGroup(
            SimulationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, Short.MAX_VALUE, Short.MAX_VALUE)
        );
        SimulationPanelLayout.setVerticalGroup(
            SimulationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 822, Short.MAX_VALUE)
        );

        add(SimulationPanel);
    }// </editor-fold>//GEN-END:initComponents

    private void BoutonDirectMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BoutonDirectMouseEntered
        mouseOver = true;
        updateDirectIcon();
    }//GEN-LAST:event_BoutonDirectMouseEntered

    private void BoutonDirectMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BoutonDirectMouseExited
        mouseOver = false;
        updateDirectIcon();
    }//GEN-LAST:event_BoutonDirectMouseExited

    private void BoutonDirectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BoutonDirectMouseClicked
        setDirect(!estEnDirect);
        updateDirectIcon();
        
        if (estEnDirect) {
            SliderJour.setValue(SliderJour.getMaximum());
        }
    }//GEN-LAST:event_BoutonDirectMouseClicked

    private void SliderJourMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SliderJourMouseReleased
        if (estEnDirect) {
            setDirect(false);
            updateDirectIcon();
        }
    }//GEN-LAST:event_SliderJourMouseReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private ca.ulaval.glo2004.afficheur.boutons.SimulationBouton AddButton;
    private javax.swing.JPanel BoutonDirect;
    private javax.swing.JPanel Buttons;
    private javax.swing.JLabel DirectIcon;
    private ca.ulaval.glo2004.afficheur.boutons.SimulationBouton HomeButton;
    private ca.ulaval.glo2004.afficheur.PanelArrondi SidePanel;
    private ca.ulaval.glo2004.afficheur.Simulation.SimulationPanel SimulationPanel;
    private javax.swing.JPanel Slider;
    private javax.swing.JSlider SliderJour;
    private javax.swing.JPanel SliderParent;
    private javax.swing.JPanel Spacing;
    // End of variables declaration//GEN-END:variables
}
