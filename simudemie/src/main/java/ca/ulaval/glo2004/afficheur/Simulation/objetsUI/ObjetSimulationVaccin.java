/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.ulaval.glo2004.afficheur.Simulation.objetsUI;

import ca.ulaval.glo2004.afficheur.Simulation.panels.SimulationPanelGauche;
import ca.ulaval.glo2004.afficheur.utilsUI.FontRegister;
import ca.ulaval.glo2004.domaine.Vaccin;
import ca.ulaval.glo2004.domaine.controleur.GestionnaireScenario;
import java.text.ParseException;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;


/**
 *
 * @author Jonathan
 */
public class ObjetSimulationVaccin extends javax.swing.JPanel {
    
    private JPanel conteneur;
    private SimulationPanelGauche simulationTabs;
    private boolean edition, mouseOverEdition, mouseOverActif, estActif;
    private int index;
    
    public ObjetSimulationVaccin() {
        initComponents();
    }
    
    public ObjetSimulationVaccin(JPanel conteneur, SimulationPanelGauche simulationTabs, int index) {
        this.conteneur = conteneur;
        this.simulationTabs = simulationTabs;
        this.index = index;
        initComponents();
        
        try {
            NomVaccinTextField.setFont(FontRegister.RobotoLight.deriveFont(14f));
            TauxImmunisationLabel.setFont(FontRegister.RobotoLight.deriveFont(14f));
            TauxAdhesionLabel.setFont(FontRegister.RobotoLight.deriveFont(14f));
            VaccinationQuotLabel.setFont(FontRegister.RobotoLight.deriveFont(14f));
        }
        catch (Exception e) {
        }
        
        // Met tout de suite en mode edition lors de la creation
        setEdition(true, false);
        setActif(false, false);
    }
    
    private void setActif(boolean actif, boolean mouseOver) {
        estActif = actif;
        
        updateActifIcon(mouseOver);
    }
    
    private void setEdition(boolean edition, boolean mouseOver) {
        this.edition = edition;
        
        NomVaccinTextField.setEnabled(edition);
        TauxImmunisation.setEnabled(edition);
        TauxAdhesion.setEnabled(edition);
        VaccinationQuot.setEnabled(edition);
        
        updateEditerIcon(mouseOver);
    }
    
    public void chargerVaccin(Vaccin vaccin) {
        NomVaccinTextField.setText(vaccin.getNom());
        TauxImmunisation.setValue(vaccin.getTauxImmunisation());
        TauxAdhesion.setValue(vaccin.getTauxAdhesion());
        VaccinationQuot.setValue(vaccin.getVaccinationQuotidienne());
        setActif(vaccin.getActive(), false);
        setEdition(false, false);
    }
    
    public void sauvegarderVaccin() {
        try {
            TauxImmunisation.commitEdit();
            TauxAdhesion.commitEdit();
            VaccinationQuot.commitEdit();
        } catch(ParseException pe) {
        }
        
        GestionnaireScenario.getInstance().creerVaccin(simulationTabs.getIndexPays(), NomVaccinTextField.getText(), (double) TauxImmunisation.getValue(), (double) TauxAdhesion.getValue(), (double) VaccinationQuot.getValue(), estActif);
    }
    
    private void updateEditerIcon(boolean actif) {
        mouseOverEdition = actif;
        String path = "/icons/simulation/mesure/";
        path += edition ? "save" : "editer";
        path += actif ? "_highlight.png" : ".png";
        Modifie.setIcon(new ImageIcon(getClass().getResource(path)));
        conteneur.getRootPane().repaint();
    }
    
    private void updateSupprimerIcon(boolean actif) {
        String path = "/icons/simulation/mesure/";
        path += "supprimer";
        path += actif ? "_highlight.png" : ".png";
        Supprimer.setIcon(new ImageIcon(getClass().getResource(path)));
        conteneur.getRootPane().repaint();
    }
    
    private void updateActifIcon(boolean actif) {
        mouseOverActif = actif;
        String path = "/icons/simulation/mesure/";
        path += estActif ? "checked" : "unchecked";
        path += actif ? "_highlight.png" : ".png";
        Activer.setIcon(new ImageIcon(getClass().getResource(path)));
        conteneur.getRootPane().repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        VaccinsPanel = new javax.swing.JPanel();
        TitreVaccinsPanel1 = new javax.swing.JPanel();
        NomVaccinTextField = new javax.swing.JTextField();
        ListeVaccins = new javax.swing.JComboBox<>();
        BoutonsPanel = new javax.swing.JPanel();
        Modifie = new javax.swing.JLabel();
        Supprimer = new javax.swing.JLabel();
        Activer = new javax.swing.JLabel();
        TauxImmunisationPanel = new javax.swing.JPanel();
        TauxImmunisationLabel = new javax.swing.JLabel();
        TauxImmunisation = new javax.swing.JSpinner();
        TauxAdhesionPanel = new javax.swing.JPanel();
        TauxAdhesionLabel = new javax.swing.JLabel();
        TauxAdhesion = new javax.swing.JSpinner();
        VaccinationQuotPanel = new javax.swing.JPanel();
        VaccinationQuotLabel = new javax.swing.JLabel();
        VaccinationQuot = new javax.swing.JSpinner();

        setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 15, 0));
        setMaximumSize(new java.awt.Dimension(32767, 155));
        setMinimumSize(new java.awt.Dimension(208, 155));
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(208, 155));
        setLayout(new java.awt.GridLayout(4, 0));

        VaccinsPanel.setOpaque(false);
        VaccinsPanel.setLayout(new java.awt.BorderLayout());

        TitreVaccinsPanel1.setLayout(new javax.swing.OverlayLayout(TitreVaccinsPanel1));

        NomVaccinTextField.setText("Nom du vaccin");
        NomVaccinTextField.setMinimumSize(new java.awt.Dimension(118, 24));
        NomVaccinTextField.setPreferredSize(new java.awt.Dimension(118, 24));
        NomVaccinTextField.setSelectionColor(new java.awt.Color(136, 192, 208));
        NomVaccinTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NomVaccinTextFieldActionPerformed(evt);
            }
        });
        TitreVaccinsPanel1.add(NomVaccinTextField);

        ListeVaccins.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        ListeVaccins.setMinimumSize(new java.awt.Dimension(118, 24));
        ListeVaccins.setPreferredSize(new java.awt.Dimension(118, 26));
        TitreVaccinsPanel1.add(ListeVaccins);

        VaccinsPanel.add(TitreVaccinsPanel1, java.awt.BorderLayout.CENTER);

        BoutonsPanel.setOpaque(false);
        BoutonsPanel.setLayout(new java.awt.GridLayout(1, 3));

        Modifie.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Modifie.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/simulation/mesure/editer.png"))); // NOI18N
        Modifie.setMaximumSize(new java.awt.Dimension(30, 30));
        Modifie.setMinimumSize(new java.awt.Dimension(30, 30));
        Modifie.setPreferredSize(new java.awt.Dimension(30, 30));
        Modifie.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ModifieMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ModifieMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                ModifieMouseReleased(evt);
            }
        });
        BoutonsPanel.add(Modifie);

        Supprimer.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Supprimer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/simulation/mesure/supprimer.png"))); // NOI18N
        Supprimer.setMaximumSize(new java.awt.Dimension(30, 30));
        Supprimer.setMinimumSize(new java.awt.Dimension(30, 30));
        Supprimer.setPreferredSize(new java.awt.Dimension(30, 30));
        Supprimer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                SupprimerMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                SupprimerMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                SupprimerMouseReleased(evt);
            }
        });
        BoutonsPanel.add(Supprimer);

        Activer.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Activer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/simulation/mesure/unchecked.png"))); // NOI18N
        Activer.setMaximumSize(new java.awt.Dimension(30, 30));
        Activer.setMinimumSize(new java.awt.Dimension(30, 30));
        Activer.setPreferredSize(new java.awt.Dimension(30, 30));
        Activer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ActiverMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ActiverMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                ActiverMouseReleased(evt);
            }
        });
        BoutonsPanel.add(Activer);

        VaccinsPanel.add(BoutonsPanel, java.awt.BorderLayout.LINE_END);

        add(VaccinsPanel);

        TauxImmunisationPanel.setOpaque(false);
        TauxImmunisationPanel.setLayout(new java.awt.BorderLayout(0, 5));

        TauxImmunisationLabel.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        TauxImmunisationLabel.setText("Taux d'efficacité :");
        TauxImmunisationLabel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 15));
        TauxImmunisationPanel.add(TauxImmunisationLabel, java.awt.BorderLayout.WEST);

        TauxImmunisation.setModel(new javax.swing.SpinnerNumberModel(0.01d, 0.01d, 99.9d, 0.5d));
        TauxImmunisationPanel.add(TauxImmunisation, java.awt.BorderLayout.CENTER);

        add(TauxImmunisationPanel);

        TauxAdhesionPanel.setOpaque(false);
        TauxAdhesionPanel.setLayout(new java.awt.BorderLayout(0, 5));

        TauxAdhesionLabel.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        TauxAdhesionLabel.setText("Taux d'adhésion :");
        TauxAdhesionLabel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 15));
        TauxAdhesionPanel.add(TauxAdhesionLabel, java.awt.BorderLayout.WEST);

        TauxAdhesion.setModel(new javax.swing.SpinnerNumberModel(0.01d, 0.01d, 99.9d, 0.5d));
        TauxAdhesionPanel.add(TauxAdhesion, java.awt.BorderLayout.CENTER);

        add(TauxAdhesionPanel);

        VaccinationQuotPanel.setMinimumSize(new java.awt.Dimension(347, 26));
        VaccinationQuotPanel.setOpaque(false);
        VaccinationQuotPanel.setPreferredSize(new java.awt.Dimension(347, 26));
        VaccinationQuotPanel.setLayout(new java.awt.BorderLayout());

        VaccinationQuotLabel.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        VaccinationQuotLabel.setText("Vacc. par jour (%) :");
        VaccinationQuotLabel.setToolTipText("");
        VaccinationQuotLabel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 15));
        VaccinationQuotPanel.add(VaccinationQuotLabel, java.awt.BorderLayout.WEST);

        VaccinationQuot.setModel(new javax.swing.SpinnerNumberModel(0.0d, 0.0d, 99.99d, 0.5d));
        VaccinationQuotPanel.add(VaccinationQuot, java.awt.BorderLayout.CENTER);

        add(VaccinationQuotPanel);
    }// </editor-fold>//GEN-END:initComponents

    private void ModifieMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ModifieMouseEntered
        updateEditerIcon(true);
    }//GEN-LAST:event_ModifieMouseEntered

    private void ModifieMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ModifieMouseExited
        updateEditerIcon(false);
    }//GEN-LAST:event_ModifieMouseExited

    private void ActiverMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ActiverMouseEntered
        updateActifIcon(true);
    }//GEN-LAST:event_ActiverMouseEntered

    private void ActiverMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ActiverMouseExited
        updateActifIcon(false);
    }//GEN-LAST:event_ActiverMouseExited

    private void SupprimerMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SupprimerMouseEntered
        updateSupprimerIcon(true);
    }//GEN-LAST:event_SupprimerMouseEntered

    private void SupprimerMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SupprimerMouseExited
        updateSupprimerIcon(false);
    }//GEN-LAST:event_SupprimerMouseExited

    private void SupprimerMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SupprimerMouseReleased
        int result = JOptionPane.showConfirmDialog(this, "Êtes-vous sûr de vouloir supprimer " + "\"" + NomVaccinTextField.getText() + "\"?", "", JOptionPane.WARNING_MESSAGE);

        if(result == JOptionPane.YES_OPTION) {
            
            boolean estActifAilleurs = GestionnaireScenario.getInstance().supprimerVaccin(simulationTabs.getIndexPays(), NomVaccinTextField.getText());
            
            if (estActifAilleurs)
            {
                JOptionPane.showMessageDialog(this, NomVaccinTextField.getText() + " est actif ailleurs.", "",  JOptionPane.WARNING_MESSAGE);
            }
            else 
            {
                conteneur.remove(this);

                simulationTabs.loadVaccins();

                conteneur.getParent().validate();
                conteneur.getRootPane().repaint();    
            } 
        }
    }//GEN-LAST:event_SupprimerMouseReleased

    private void ModifieMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ModifieMouseReleased
        setEdition(!edition, mouseOverEdition);
        if(!edition) {
            sauvegarderVaccin();
        }
    }//GEN-LAST:event_ModifieMouseReleased

    private void ActiverMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ActiverMouseReleased
        setActif(!estActif, mouseOverActif);
        sauvegarderVaccin();
    }//GEN-LAST:event_ActiverMouseReleased

    private void NomVaccinTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NomVaccinTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NomVaccinTextFieldActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Activer;
    private javax.swing.JPanel BoutonsPanel;
    private javax.swing.JComboBox<String> ListeVaccins;
    private javax.swing.JLabel Modifie;
    private javax.swing.JTextField NomVaccinTextField;
    private javax.swing.JLabel Supprimer;
    private javax.swing.JSpinner TauxAdhesion;
    private javax.swing.JLabel TauxAdhesionLabel;
    private javax.swing.JPanel TauxAdhesionPanel;
    private javax.swing.JSpinner TauxImmunisation;
    private javax.swing.JLabel TauxImmunisationLabel;
    private javax.swing.JPanel TauxImmunisationPanel;
    private javax.swing.JPanel TitreVaccinsPanel1;
    private javax.swing.JSpinner VaccinationQuot;
    private javax.swing.JLabel VaccinationQuotLabel;
    private javax.swing.JPanel VaccinationQuotPanel;
    private javax.swing.JPanel VaccinsPanel;
    // End of variables declaration//GEN-END:variables
}
