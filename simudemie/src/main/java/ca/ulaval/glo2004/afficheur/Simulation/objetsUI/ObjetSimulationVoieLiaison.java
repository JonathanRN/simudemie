/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.ulaval.glo2004.afficheur.Simulation.objetsUI;

import ca.ulaval.glo2004.afficheur.utilsUI.FontRegister;
import ca.ulaval.glo2004.domaine.VoieLiaison;
import ca.ulaval.glo2004.domaine.VoieLiaison.TypeVoie;
import ca.ulaval.glo2004.domaine.controleur.GestionnaireScenario;
import java.text.ParseException;
import javax.swing.ImageIcon;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

/**
 *
 * @author Jonathan
 */
public class ObjetSimulationVoieLiaison extends javax.swing.JPanel {
    
    private TypeVoie type;
    
    private boolean mouseOver, checked = true;
        
    public ObjetSimulationVoieLiaison(VoieLiaison voie) {
        initComponents();
        
        try {
            PaysOrigineLabel.setText(voie.getPaysOrigine().getNom());
            PaysDestinationLabel.setText(voie.getPaysDestination().getNom());
            setTypeVoie(voie.getType());
            checked = voie.getAccessible();
            Transmission.setValue(voie.getTauxPropag());

            Transmission.addChangeListener(new ChangeListener() {
                @Override
                public void stateChanged(ChangeEvent e) {
                    sauvegarder();
                }
            });
            updateIcon();
        }
        catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    public void setTypeVoie(TypeVoie type) {
        this.type = type;
        String texte = "Voie " + type;        
        if (type == TypeVoie.Aerien) {
            texte = "Voie Aérienne";
        }
        
        VoieLabel.setText(texte);
        VoieIcon1.setIcon(new ImageIcon(getClass().getResource("/icons/simulation/lien/" + type + ".png")));        
    }
    
    private void updateIcon() {
        String path = "/icons/simulation/mesure/";
        path += checked ? "checked" : "unchecked";
        path += mouseOver ? "_highlight.png" : ".png";
        Activer.setIcon(new ImageIcon(getClass().getResource(path)));
    }

    private void sauvegarder() {
        try {
            Transmission.commitEdit();
        } catch(ParseException pe) {
        }
        
        GestionnaireScenario.getInstance().modifierLien(PaysOrigineLabel.getText(), PaysDestinationLabel.getText(), type, checked, (double) Transmission.getValue());
    }
    
    @Override
    public String toString() {
        return PaysOrigineLabel.getText() + " -> " + PaysDestinationLabel.getText() + " : " + type;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Pays = new javax.swing.JPanel();
        PaysOrigineLabel = new javax.swing.JLabel();
        PaysIcon = new javax.swing.JLabel();
        PaysDestinationLabel = new javax.swing.JLabel();
        Voie = new javax.swing.JPanel();
        Activer = new javax.swing.JLabel();
        VoieLabel = new javax.swing.JLabel();
        VoieIcon1 = new javax.swing.JLabel();
        Prob = new javax.swing.JPanel();
        TransmissionLabel = new javax.swing.JLabel();
        Transmission = new javax.swing.JSpinner();

        setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 10, 15, 0));
        setMaximumSize(new java.awt.Dimension(276, 106));
        setMinimumSize(new java.awt.Dimension(276, 106));
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(276, 106));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                formMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                formMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });
        setLayout(new java.awt.GridLayout(3, 0));

        Pays.setMinimumSize(new java.awt.Dimension(141, 35));
        Pays.setOpaque(false);
        Pays.setPreferredSize(new java.awt.Dimension(100, 35));
        Pays.setRequestFocusEnabled(false);
        Pays.setLayout(new javax.swing.BoxLayout(Pays, javax.swing.BoxLayout.LINE_AXIS));

        PaysOrigineLabel.setFont(FontRegister.RobotoLight.deriveFont(14f));
        PaysOrigineLabel.setText("Pays A");
        PaysOrigineLabel.setPreferredSize(new java.awt.Dimension(50, 16));
        Pays.add(PaysOrigineLabel);

        PaysIcon.setFont(FontRegister.RobotoLight.deriveFont(14f));
        PaysIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/simulation/lien/arrow_24px.png"))); // NOI18N
        PaysIcon.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 10));
        Pays.add(PaysIcon);

        PaysDestinationLabel.setFont(FontRegister.RobotoLight.deriveFont(14f));
        PaysDestinationLabel.setText("Pays B");
        Pays.add(PaysDestinationLabel);

        add(Pays);
        Pays.getAccessibleContext().setAccessibleDescription("");

        Voie.setMinimumSize(new java.awt.Dimension(141, 35));
        Voie.setOpaque(false);
        Voie.setPreferredSize(new java.awt.Dimension(100, 35));
        Voie.setRequestFocusEnabled(false);
        Voie.setLayout(new javax.swing.BoxLayout(Voie, javax.swing.BoxLayout.LINE_AXIS));

        Activer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/simulation/mesure/unchecked.png"))); // NOI18N
        Activer.setMaximumSize(new java.awt.Dimension(50, 50));
        Activer.setMinimumSize(new java.awt.Dimension(50, 50));
        Activer.setPreferredSize(new java.awt.Dimension(30, 50));
        Voie.add(Activer);

        VoieLabel.setFont(FontRegister.RobotoLight.deriveFont(14f));
        VoieLabel.setText("Voie Terrestre");
        VoieLabel.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 20));
        VoieLabel.setPreferredSize(new java.awt.Dimension(50, 16));
        Voie.add(VoieLabel);
        Voie.add(VoieIcon1);

        add(Voie);

        Prob.setMinimumSize(new java.awt.Dimension(288, 35));
        Prob.setOpaque(false);
        Prob.setPreferredSize(new java.awt.Dimension(288, 35));
        Prob.setLayout(new javax.swing.BoxLayout(Prob, javax.swing.BoxLayout.LINE_AXIS));

        TransmissionLabel.setFont(FontRegister.RobotoLight.deriveFont(14f));
        TransmissionLabel.setText("Probabilité de transmission :");
        TransmissionLabel.setAlignmentX(0.5F);
        TransmissionLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        TransmissionLabel.setMaximumSize(new java.awt.Dimension(200, 19));
        TransmissionLabel.setMinimumSize(new java.awt.Dimension(200, 19));
        TransmissionLabel.setPreferredSize(new java.awt.Dimension(200, 19));
        Prob.add(TransmissionLabel);

        Transmission.setModel(new javax.swing.SpinnerNumberModel(0.0d, 0.0d, 99.9d, 0.5d));
        Prob.add(Transmission);

        add(Prob);
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered
        mouseOver = true;
        updateIcon();
        this.getRootPane().repaint();
    }//GEN-LAST:event_formMouseEntered

    private void formMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseExited
        mouseOver = false;
        updateIcon();
        this.getRootPane().repaint();
    }//GEN-LAST:event_formMouseExited

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
        checked = !checked; 
        updateIcon();
        sauvegarder();
        this.getRootPane().repaint();
    }//GEN-LAST:event_formMouseReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Activer;
    private javax.swing.JPanel Pays;
    private javax.swing.JLabel PaysDestinationLabel;
    private javax.swing.JLabel PaysIcon;
    private javax.swing.JLabel PaysOrigineLabel;
    private javax.swing.JPanel Prob;
    private javax.swing.JSpinner Transmission;
    private javax.swing.JLabel TransmissionLabel;
    private javax.swing.JPanel Voie;
    private javax.swing.JLabel VoieIcon1;
    private javax.swing.JLabel VoieLabel;
    // End of variables declaration//GEN-END:variables
}
