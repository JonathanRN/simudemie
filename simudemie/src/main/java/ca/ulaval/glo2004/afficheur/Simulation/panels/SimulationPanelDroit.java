/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.ulaval.glo2004.afficheur.Simulation.panels;

import ca.ulaval.glo2004.afficheur.Simulation.Simulation;
import ca.ulaval.glo2004.afficheur.utilsUI.Couleurs;
import ca.ulaval.glo2004.afficheur.utilsUI.FontRegister;
import ca.ulaval.glo2004.afficheur.utilsUI.PanelArrondi;


/**
 *
 * @author henri
 */
public class SimulationPanelDroit extends PanelArrondi {
    
    private Simulation simulation;

    public SimulationPanelDroit() {
        
        try {
            initComponents();
            super.setBackground(Couleurs.sideMenuTransp);
            SidePanel.setBackground(Couleurs.sideMenuLessTransp); 
            MaladiePanel.setVisible(false);
            
            MaladieTitre.setFont(FontRegister.RobotoLight.deriveFont(14f));
            MaladieBouton.setIcon("/icons/simulation/icons8_microorganisms_25px.png");
            BoutonPhoto.setIcon("/icons/simulation/icons8_unsplash_25px.png");
            AideBouton.setIcon("/icons/simulation/icons8_help_25px.png");
            HomeBouton.setIcon("/icons/icons8_home_25px_1.png");
           
        }
        catch(Exception e) {
        }
    }

    public void setSimulation(Simulation simulation) {
        this.simulation = simulation;
    }
    public void loadElements() {
        if (MaladieBouton.getToggle()) {
            loadMaladie();
        }
    }
    
    public void loadMaladie() {
        ConteneurMaladiePanel.removeAll();
        ConteneurMaladiePanel.getParent().validate();
        ConteneurMaladiePanel.getRootPane().repaint();

    }
    
    public void unToggleMaladie() {
        MaladiePanel.setVisible(false);
        simulation.toggleMenuDroitMaladie(false);
        MaladieBouton.setToggle(false);
        repaint();
    }
    
    public void onToggleMaladie() {
        MaladiePanel.setVisible(true);
        simulation.toggleMenuDroitMaladie(true);
        MaladieBouton.setToggle(true);

        loadElements();
        repaint();
    }
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SidePanelParent = new javax.swing.JPanel();
        SidePanel = new ca.ulaval.glo2004.afficheur.utilsUI.PanelArrondi();
        MaladieBouton = new ca.ulaval.glo2004.afficheur.boutons.ToggleBouton();
        BoutonPhoto = new ca.ulaval.glo2004.afficheur.boutons.SimulationBouton();
        AideBouton = new ca.ulaval.glo2004.afficheur.boutons.SimulationBouton();
        HomeBouton = new ca.ulaval.glo2004.afficheur.boutons.SimulationBouton();
        MaladiePanel = new javax.swing.JPanel();
        Titre = new javax.swing.JPanel();
        MaladieTitre = new javax.swing.JLabel();
        ConteneurMaladiePanel = new javax.swing.JPanel();

        setMinimumSize(new java.awt.Dimension(334, 200));
        setPreferredSize(new java.awt.Dimension(334, 200));
        setLayout(new javax.swing.OverlayLayout(this));

        SidePanelParent.setOpaque(false);
        SidePanelParent.setLayout(new java.awt.BorderLayout());

        SidePanel.setMaximumSize(new java.awt.Dimension(100, 200));
        SidePanel.setMinimumSize(new java.awt.Dimension(100, 200));
        SidePanel.setLayout(new java.awt.GridLayout(4, 1));

        MaladieBouton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                MaladieBoutonMouseReleased(evt);
            }
        });
        SidePanel.add(MaladieBouton);

        BoutonPhoto.setToolTipText("Prendre une photo de la carte courante (S)");
        BoutonPhoto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                BoutonPhotoMouseReleased(evt);
            }
        });
        SidePanel.add(BoutonPhoto);

        AideBouton.setToolTipText("Aide");
        AideBouton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                AideBoutonMouseReleased(evt);
            }
        });
        SidePanel.add(AideBouton);

        HomeBouton.setToolTipText("Quitter la simulation (ESC)");
        HomeBouton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                HomeBoutonMouseReleased(evt);
            }
        });
        SidePanel.add(HomeBouton);

        SidePanelParent.add(SidePanel, java.awt.BorderLayout.EAST);

        add(SidePanelParent);

        MaladiePanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 50));
        MaladiePanel.setOpaque(false);
        MaladiePanel.setLayout(new java.awt.BorderLayout());

        Titre.setOpaque(false);
        Titre.setLayout(new java.awt.BorderLayout());

        MaladieTitre.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        MaladieTitre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MaladieTitre.setText("Maladie");
        MaladieTitre.setPreferredSize(new java.awt.Dimension(62, 30));
        Titre.add(MaladieTitre, java.awt.BorderLayout.CENTER);

        MaladiePanel.add(Titre, java.awt.BorderLayout.PAGE_START);

        ConteneurMaladiePanel.setOpaque(false);

        javax.swing.GroupLayout ConteneurMaladiePanelLayout = new javax.swing.GroupLayout(ConteneurMaladiePanel);
        ConteneurMaladiePanel.setLayout(ConteneurMaladiePanelLayout);
        ConteneurMaladiePanelLayout.setHorizontalGroup(
            ConteneurMaladiePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        ConteneurMaladiePanelLayout.setVerticalGroup(
            ConteneurMaladiePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 358, Short.MAX_VALUE)
        );

        MaladiePanel.add(ConteneurMaladiePanel, java.awt.BorderLayout.CENTER);

        add(MaladiePanel);
    }// </editor-fold>//GEN-END:initComponents

    private void AideBoutonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AideBoutonMouseReleased
        unToggleMaladie();
        simulation.AideBoutonReleased(evt);
    }//GEN-LAST:event_AideBoutonMouseReleased

    private void HomeBoutonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HomeBoutonMouseReleased
        unToggleMaladie();
        simulation.HomeButtonReleased(evt);
    }//GEN-LAST:event_HomeBoutonMouseReleased

    private void MaladieBoutonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MaladieBoutonMouseReleased
        if (!MaladieBouton.getToggle()){
            onToggleMaladie();
        }   
        else { unToggleMaladie(); }
    }//GEN-LAST:event_MaladieBoutonMouseReleased

    private void BoutonPhotoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BoutonPhotoMouseReleased
        unToggleMaladie();
        simulation.prendrePhoto();
    }//GEN-LAST:event_BoutonPhotoMouseReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private ca.ulaval.glo2004.afficheur.boutons.SimulationBouton AideBouton;
    private ca.ulaval.glo2004.afficheur.boutons.SimulationBouton BoutonPhoto;
    private javax.swing.JPanel ConteneurMaladiePanel;
    private ca.ulaval.glo2004.afficheur.boutons.SimulationBouton HomeBouton;
    private ca.ulaval.glo2004.afficheur.boutons.ToggleBouton MaladieBouton;
    private javax.swing.JPanel MaladiePanel;
    private javax.swing.JLabel MaladieTitre;
    private ca.ulaval.glo2004.afficheur.utilsUI.PanelArrondi SidePanel;
    private javax.swing.JPanel SidePanelParent;
    private javax.swing.JPanel Titre;
    // End of variables declaration//GEN-END:variables

}
