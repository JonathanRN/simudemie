/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.ulaval.glo2004.afficheur.onglets;

import java.awt.AlphaComposite;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.imageio.ImageIO;
import javax.swing.Timer;

/**
 *
 * @author Jonathan
 */
public class OngletTitre extends javax.swing.JPanel {
    
    private Timer logoTimer, translateTimer, textTimer;
    
    private float alphaImage = 0, alphaText = 0;
    private boolean alphaImageDone;
    
    private final int finalLogoOffsetY = 100;
    
    private int logoX;
    private int logoY, logoOffsetY;
    private Image image, text;
    
    private final int DELAY = 16;
    
    public OngletTitre() {
        initComponents();
        
        try {
            text = ImageIO.read(getClass().getResource("/icons/simudemie_txt.png"));
            image = ImageIO.read(getClass().getResource("/icons/virus.png"));
        } catch (Exception e) {
        }
        
        updateAlphaLogo();
    }
    
    private void translateLogo() {
        translateTimer = new Timer(DELAY, listener -> {
            if (logoOffsetY < finalLogoOffsetY) {
                logoOffsetY += 2;
            }
            else {
                updateAlphaText();
                translateTimer.stop();
            }
        });
        translateTimer.start();
    }
    
    private void updateAlphaLogo() {
        logoTimer = new Timer(DELAY, listener -> {
            if (alphaImage < 0.99f) {
                alphaImage += 0.02f;
            }
            else {
                alphaImageDone = true;
                translateLogo();
                logoTimer.stop();
            }
        });
        logoTimer.start();
    }
    
    private void updateAlphaText() {
        textTimer = new Timer(DELAY, listener -> {
            if (alphaText < 0.99f) {
                alphaText += 0.02f;
            }
            else {
                textTimer.stop();
            }
        });
        textTimer.start();
    }
    
    @Override
    public void paintComponent(Graphics g) {
        super.paintComponent(g);
        
        logoX = getBounds().width/2 - image.getWidth(null) / 2;
        logoY = getBounds().height/2 - image.getHeight(null) / 2;
        
        Graphics2D gr = (Graphics2D)g;
        gr.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, alphaImage));
        gr.drawImage(image, logoX, logoY - logoOffsetY, null);
        
        if (alphaImageDone) {
            Graphics2D textGr = (Graphics2D)g;
            textGr.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, alphaText));
            textGr.drawImage(text, logoX - 125, logoY - logoOffsetY + image.getHeight(null), null);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(46, 52, 64));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
